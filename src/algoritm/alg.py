#!/usr/bin/env python
# -*- coding: utf-8 -*-
import re
import operator
import numpy as np
import itertools
from collections import OrderedDict
import enchant
d = enchant.Dict("en_US")
# >>> d.check("Hello")
# True
# >>> d.check("Helo")
# False
# >>> d.suggest("Helo")
# ['He lo', 'He-lo', 'Hello', 'Helot', 'Help', 'Halo', 'Hell', 'Held', 'Helm', 'Hero', "He'll"]
# >>>
pattern = re.compile("([A-Z])")

# this is letter frequency in usual english
usualEnglishLettersRate = u"etaoinshrdlcumwfgypbvkjxqz"
usualEnglishLettersRate = usualEnglishLettersRate.upper()


# вот эту фигню варьировать
N = 4
frequentAnalysisError = 4

l = []
nods = []
for i in range(1000):
    nods.append(0)
    l.append(0)
nl = 0

print l


def gcd(a, b):
    """Calculate the Greatest Common Divisor of a and b.

    Unless b==0, the result will have the same sign as b (so that when
    b is divided by it, the result comes out positive).
    """
    while b:
        a, b = b, a%b
    return a

def keyCount(cipher):
    global nl, N
    print cipher

    cipherLetters = u""
    for i in range(cipher.__len__()):
         if pattern.match(cipher[i]):
             cipherLetters += cipher[i]

    print cipherLetters
    for i in range(cipherLetters.__len__() - N):
        print "for " + str(i)
        str1 = cipherLetters[i:i + N]
        for j in range(i + 1, cipherLetters.__len__() - N, 1):
            str2 = cipherLetters[j:j + N]
            if str2 == str1:
                print(i)
                print(j)
                print(cipherLetters[i:i + N])
                print(cipherLetters[j:j + N])
                l[nl] = j - 1
                nl += 1

    print l
    print nl

    i = 0
    while i < nl:
        j = i + 1
        while j < nl:
            a = int(l[i])
            b = int(l[j])
            a = gcd(a, b)
            index = int(a)
            if index < 500:
                nods[index] += 1
            j += 1
        i += 1

    keylen = 3

    for i in range(3, 500):
        if nods[keylen] < nods[i]:
            keylen = i
    print nods
    print "keylen: " + str(keylen)
    return keylen


def frequencyAnalysis(cipher, keyLen):
    cipherLetters = u""
    for i in range(cipher.__len__()):
         if pattern.match(cipher[i]):
             cipherLetters += cipher[i]


    lettersCount = []
    for j in range(keyLen):
        lettersCount.append({})
        for i in range(ord('A'), ord('Z') + 1, 1):
            lettersCount[j][chr(i)] = 0



    for i in range(cipherLetters.__len__()):
        lettersCount[i % keyLen][cipherLetters[i]] += 1

    print(lettersCount)
    sorted_lettersCount = sorted(lettersCount[0].items(), key=operator.itemgetter(1))
    print (sorted_lettersCount)
    lettersRate =  []
    arrayOfletters = sorted(lettersCount[0], key=lettersCount[0].__getitem__, reverse=True)
    words = wordsFromMostPopularLetter(cipher, arrayOfletters, 0, 11)
    newMap = secondPopularLettersWord(cipher, words, arrayOfletters[11:20], usualEnglishLettersRate[11:20])
    cipher1 = cipher.translate(newMap)
    # words = wordsFromMostPopularLetter(cipher, arrayOfletters, 11, 20)
    # cipher = cipher.translate(words)
    print cipher1
    return cipher1


def wordsFromMostPopularLetter(text, lettersRate, begin, end):
    newLettersRate = lettersRate[begin:end]
    newInglishLetter = usualEnglishLettersRate[begin:end]
    print newInglishLetter
    print newLettersRate
    confirMaps = []
    confirmWords = []
    for word in text.split():
        if isCorrectWord(word, newLettersRate):
            if(begin == 0):
                newWord = word.replace(newLettersRate[0],newInglishLetter[0])
            else:
                newWord = word
            confirmWords.append(newWord)
        else:
            continue
    if(begin == 0):
        newLettersRate = lettersRate[1:end]
        newInglishLetter = usualEnglishLettersRate[1:end]
    else:
        newLettersRate = lettersRate[begin:end]
        newInglishLetter = usualEnglishLettersRate[begin:end]
    confirmWords = sorted(set(confirmWords))
    confirmWords.sort(key=len, reverse=True)
    checkFullnessOfLettersArray(newLettersRate, confirmWords)
    print len(confirmWords)
    print confirmWords
    translatedWords = []
    for p in itertools.permutations(newInglishLetter):
        map = zip(newLettersRate,p)
        newMap = fromListToMap(map)
        translatedWords = checkAndTranslateWords(confirmWords, newMap)
        if translatedWords is not None:
            confirMaps.append(map)
            break
        else:
            continue
    print len(confirMaps)
    if (begin == 0):
        index = ord(lettersRate[0])
        newMap.update({ index : usualEnglishLettersRate[0]})
        return newMap
    else:
        return newMap


def secondPopularLettersWord(text, map, requiredLetters, englishLetters):
    arrayOfLetters = []
    for key, value in map.iteritems():
        arrayOfLetters.append(chr(key))
    arrayOfLetters = arrayOfLetters + requiredLetters
    confirmWords = []
    print arrayOfLetters
    print requiredLetters
    for word in text.split():
        if isCorrectWordWithRequired(word, arrayOfLetters, requiredLetters):
            confirmWords.append(word)
        else:
            continue
    confirmWords = sorted(set(confirmWords))
    confirmWords.sort(key=len, reverse=True)
    print len(confirmWords)
    print confirmWords
    newMap = translateConfirmWords(confirmWords, map, requiredLetters, englishLetters)
    print newMap
    return newMap


def translateConfirmWords(confirmWords, map, requiredLetters, englishLetters):
    for p in itertools.permutations(englishLetters):
        m = zip(requiredLetters,p)
        newMap = fromListToMap(m)
        newMap.update(map)
        translatedWords = checkAndTranslateWords(confirmWords, newMap)
        if translatedWords is not None:
            print "asasd"
            print translatedWords
            break
        else:
            continue
    return newMap


def isCorrectWordWithRequired(word, arrayOfLetters, requiredLetters):
    isHaveRequredLetters = False
    for letter in word:
        if letter in arrayOfLetters:
            if letter in requiredLetters:
                isHaveRequredLetters = True
            continue
        else:
            return False
    return isHaveRequredLetters


def checkFullnessOfLettersArray(newLettersRate, confirmWords):
    array = "".join(confirmWords)
    array2 = ''.join(sorted(array))
    newarray = ''.join(OrderedDict.fromkeys(array2))
    array = "".join(newLettersRate)
    newarray2 = ''.join(sorted(array))
    newarray3 = ''.join(OrderedDict.fromkeys(newarray2))
    print "old:"
    print newarray
    print "new:"
    print newarray3


def fromListToMap(map):
    newMap  = {}
    for a in map:
        indx = ord(a[0])
        newMap[indx] = a[1]
    return newMap

def checkAndTranslateWords(words, newMap):

    i = 0
    translatedWords = []
    for word in words:
        newWord = word.translate(newMap)
        if d.check(newWord):
            translatedWords.append(newWord)
            i = i + 1
        else:
            return None

    return translatedWords




def isCorrectWord(word, letters):
    for letter in word:
        if letter in letters:
            continue
        else:
            return False
    return True

# returns true if  currenIndex lessthan endIndex and false otherwise
def compareComplexIndexes(currentIndex, endIndex):
    for i in range(len(currentIndex)):
        if currentIndex[i] > endIndex[i]:
            return False

    return True



def increaseComplexIndex(currentIndex, endIndex, permanentIndex):
    firstVarLetterIndex = -1
    for i in range(len(permanentIndex)):
        if permanentIndex[i] == -1:
            firstVarLetterIndex = i
            break


    if firstVarLetterIndex == -1:
        currentIndex = endIndex[:]
        currentIndex[0] = endIndex[0] + 1
        return currentIndex
    else:
        secondVarLetterIndex = permanentIndex.__len__() - 1
        for i in range(firstVarLetterIndex + 1, len(permanentIndex)):
             if permanentIndex[i] == -1:
                secondVarLetterIndex = i
                break

    currentIndex[secondVarLetterIndex] += 1

    for i in range(len(currentIndex) - 1):
        if currentIndex[i] > endIndex[i]:
            currentIndex[i] -= 2 * frequentAnalysisError - 1
            if currentIndex[i] < 0:
                currentIndex[i] = 0
            # currentIndex[i + 1] += 1
            for j in range(i + 1, permanentIndex.__len__()):
                if permanentIndex[j] == -1:
                    currentIndex[j] += 1
                    break
    return currentIndex



if __name__ == '__main__':
    sourceTextForCipher3 ="HE STOPPED TO DINNER THAT EVENING, AND, MUCH TO RUTH’S SATISFACTION, MADE A FAVORABLE IMPRESSION ON HER FATHER. THEY TALKED ABOUT THE SEA AS A CAREER, A SUBJECT WHICH MARTIN HAD AT HIS FINGER-ENDS, AND MR. MORSE REMARKED AFTERWARD THAT HE SEEMED A VERY CLEAR-HEADED YOUNG MAN. IN HIS AVOIDANCE OF SLANG AND HIS SEARCH AFTER RIGHT WORDS, MARTIN WAS COMPELLED TO TALK SLOWLY, WHICH ENABLED HIM TO FIND THE BEST THOUGHTS THAT WERE IN HIM. HE WAS MORE AT EASE THAN THAT FIRST NIGHT AT DINNER, NEARLY A YEAR BEFORE, AND HIS SHYNESS AND MODESTY EVEN COMMENDED HIM TO MRS. MORSE, WHO WAS PLEASED AT HIS MANIFEST IMPROVEMENT. HE IS THE FIRST MAN THAT EVER DREW PASSING NOTICE FROM RUTH,SHE TOLD HER HUSBAND. SHE HAS BEEN SO SINGULARLY BACKWARD WHERE MEN ARE CONCERNED THAT I HAVE BEEN WORRIED GREATLY.  MR. MORSE LOOKED AT HIS WIFE CURIOUSLY.   YOU MEAN TO USE THIS YOUNG SAILOR TO WAKE HER UP? HE QUESTIONED.   I MEAN THAT SHE IS NOT TO DIE AN OLD MAID IF I CAN HELP IT, WAS THE ANSWER. IF THIS YOUNG EDEN CAN AROUSE HER INTEREST IN MANKIND IN GENERAL, IT WILL BE A GOOD THING.   A VERY GOOD THING, HE COMMENTED. BUT SUPPOSE,-AND WE MUST SUPPOSE, SOMETIMES, MY DEAR,-SUPPOSE HE AROUSES HER INTEREST TOO PARTICULARLY IN HIM? IMPOSSIBLE, MRS. MORSE LAUGHED. SHE IS THREE YEARS OLDER THAN HE, AND, BESIDES, IT IS IMPOSSIBLE. NOTHING WILL EVER COME OF IT. TRUST THAT TO ME.   AND SO MARTIN’S  WAS ARRANGED FOR HIM, WHILE HE, LED ON BY ARTHUR AND NORMAN, WAS MEDITATING AN EXTRAVAGANCE. THEY WERE GOING OUT FOR A RIDE INTO THE HILLS SUNDAY MORNING ON THEIR WHEELS, WHICH DID NOT INTEREST MARTIN UNTIL HE LEARNED THAT RUTH, TOO, RODE A WHEEL AND WAS GOING ALONG. HE DID NOT RIDE, NOR OWN A WHEEL, BUT IF RUTH RODE, IT WAS UP TO HIM TO BEGIN, WAS HIS DECISION; AND WHEN HE SAID GOOD NIGHT, HE STOPPED IN AT A CYCLERY ON HIS WAY HOME AND SPENT FORTY DOLLARS FOR A WHEEL. IT WAS MORE THAN A MONTH’S HARD-EARNED WAGES, AND IT REDUCED HIS STOCK OF MONEY AMAZINGLY; BUT WHEN HE ADDED THE HUNDRED DOLLARS HE WAS TO RECEIVE FROM THE EXAMINER TO THE FOUR HUNDRED AND TWENTY DOLLARS THAT WAS THE LEAST THE YOUTH’S COMPANION COULD PAY HIM, HE FELT THAT HE HAD REDUCED THE PERPLEXITY THE UNWONTED AMOUNT OF MONEY HAD CAUSED HIM. NOR DID HE MIND, IN THE COURSE OF LEARNING TO RIDE THE WHEEL HOME, THE FACT THAT HE RUINED HIS SUIT OF CLOTHES. HE CAUGHT THE TAILOR BY TELEPHONE THAT NIGHT FROM MR. HIGGINBOTHAM’S STORE AND ORDERED ANOTHER SUIT. THEN HE CARRIED THE WHEEL UP THE NARROW STAIRWAY THAT CLUNG LIKE A FIRE-ESCAPE TO THE REAR WALL OF THE BUILDING, AND WHEN HE HAD MOVED HIS BED OUT FROM THE WALL, FOUND THERE WAS JUST SPACE ENOUGH IN THE SMALL ROOM FOR HIMSELF AND THE WHEEL.   SUNDAY HE HAD INTENDED TO DEVOTE TO STUDYING FOR THE HIGH SCHOOL EXAMINATION, BUT THE PEARL-DIVING ARTICLE LURED HIM AWAY, AND HE SPENT THE DAY IN THE WHITE-HOT FEVER OF RE-CREATING THE BEAUTY AND ROMANCE THAT BURNED IN HIM. THE FACT THAT THE EXAMINER OF THAT MORNING HAD FAILED TO PUBLISH HIS TREASURE-HUNTING ARTICLE DID NOT DASH HIS SPIRITS. HE WAS AT TOO GREAT A HEIGHT FOR THAT, AND HAVING BEEN DEAF TO A TWICE-REPEATED SUMMONS, HE WENT WITHOUT THE HEAVY SUNDAY DINNER WITH WHICH MR. HIGGINBOTHAM INVARIABLY GRACED HIS TABLE. TO MR. HIGGINBOTHAM SUCH A DINNER WAS ADVERTISEMENT OF HIS WORLDLY ACHIEVEMENT AND PROSPERITY, AND HE HONORED IT BY DELIVERING PLATITUDINOUS SERMONETTES UPON AMERICAN INSTITUTIONS AND THE OPPORTUNITY SAID INSTITUTIONS GAVE TO ANY HARD-WORKING MAN TO RISE-THE RISE, IN HIS CASE, WHICH HE POINTED OUT UNFAILINGLY, BEING FROM A GROCER’S CLERK TO THE OWNERSHIP OF HIGGINBOTHAM’S CASH STORE.   MARTIN EDEN LOOKED WITH A SIGH AT HIS UNFINISHED PEARL-DIVING ON MONDAY MORNING, AND TOOK THE CAR DOWN TO OAKLAND TO THE HIGH SCHOOL. AND WHEN, DAYS LATER, HE APPLIED FOR THE RESULTS OF HIS EXAMINATIONS, HE LEARNED THAT HE HAD FAILED IN EVERYTHING SAVE GRAMMAR.   YOUR GRAMMAR IS EXCELLENT, PROFESSOR HILTON INFORMED HIM, STARING AT HIM THROUGH HEAVY SPECTACLES; BUT YOU KNOW NOTHING, POSITIVELY NOTHING, IN THE OTHER BRANCHES, AND YOUR UNITED STATES HISTORY IS ABOMINABLE-THERE IS NO OTHER WORD FOR IT, ABOMINABLE. I SHOULD ADVISE YOU-  PROFESSOR HILTON PAUSED AND GLARED AT HIM, UNSYMPATHETIC AND UNIMAGINATIVE AS ONE OF HIS OWN TEST-TUBES. HE WAS PROFESSOR OF PHYSICS IN THE HIGH SCHOOL, POSSESSOR OF A LARGE FAMILY, A MEAGRE SALARY, AND A SELECT FUND OF PARROT-LEARNED KNOWLEDGE.   YES, SIR, MARTIN SAID HUMBLY, WISHING SOMEHOW THAT THE MAN AT THE DESK IN THE LIBRARY WAS IN PROFESSOR HILTON’S PLACE JUST THEN.   AND I SHOULD ADVISE YOU TO GO BACK TO THE GRAMMAR SCHOOL FOR AT LEAST TWO YEARS. GOOD DAY.   MARTIN WAS NOT DEEPLY AFFECTED BY HIS FAILURE, THOUGH HE WAS SURPRISED AT RUTH’S SHOCKED EXPRESSION WHEN HE TOLD HER PROFESSOR HILTON’S ADVICE. HER DISAPPOINTMENT WAS SO EVIDENT THAT HE WAS SORRY HE HAD FAILED, BUT CHIEFLY SO FOR HER SAKE.   YOU SEE I WAS RIGHT, SHE SAID. YOU KNOW FAR MORE THAN ANY OF THE STUDENTS ENTERING HIGH SCHOOL, AND YET YOU CAN’T PASS THE EXAMINATIONS. IT IS BECAUSE WHAT EDUCATION YOU HAVE IS FRAGMENTARY, SKETCHY. YOU NEED THE DISCIPLINE OF STUDY, SUCH AS ONLY SKILLED TEACHERS CAN GIVE YOU. YOU MUST BE THOROUGHLY GROUNDED. PROFESSOR HILTON IS RIGHT, AND IF I WERE YOU, I’D GO TO NIGHT SCHOOL. A YEAR AND A HALF OF IT MIGHT ENABLE YOU TO CATCH UP THAT ADDITIONAL SIX MONTHS. BESIDES, THAT WOULD LEAVE YOU YOUR DAYS IN WHICH TO WRITE, OR, IF YOU COULD NOT MAKE YOUR LIVING BY YOUR PEN, YOU WOULD HAVE YOUR DAYS IN WHICH TO WORK IN SOME POSITION.   BUT IF MY DAYS ARE TAKEN UP WITH WORK AND MY NIGHTS WITH SCHOOL, WHEN AM I GOING TO SEE YOU?-WAS MARTIN’S FIRST THOUGHT, THOUGH HE REFRAINED FROM UTTERING IT. INSTEAD, HE SAID:-   IT SEEMS SO BABYISH FOR ME TO BE GOING TO NIGHT SCHOOL. BUT I WOULDN’T MIND THAT IF I THOUGHT IT WOULD PAY. BUT I DON’T THINK IT WILL PAY. I CAN DO THE WORK QUICKER THAN THEY CAN TEACH ME. IT WOULD BE A LOSS OF TIME- HE THOUGHT OF HER AND HIS DESIRE TO HAVE HER-AND I CAN’T AFFORD THE TIME. I HAVEN’T THE TIME TO SPARE, IN FACT.   THERE IS SO MUCH THAT IS NECESSARY. SHE LOOKED AT HIM GENTLY, AND HE WAS A BRUTE TO OPPOSE HER. PHYSICS AND CHEMISTRY-YOU CAN’T DO THEM WITHOUT LABORATORY STUDY; AND YOU’LL FIND ALGEBRA AND GEOMETRY ALMOST HOPELESS WITH INSTRUCTION. YOU NEED THE SKILLED TEACHERS, THE SPECIALISTS IN THE ART OF IMPARTING KNOWLEDGE.   HE WAS SILENT FOR A MINUTE, CASTING ABOUT FOR THE LEAST VAINGLORIOUS WAY IN WHICH TO EXPRESS HIMSELF.   PLEASE DON’T THINK I’M BRAGGING, HE BEGAN. I DON’T INTEND IT THAT WAY AT ALL. BUT I HAVE A FEELING THAT I AM WHAT I MAY CALL A NATURAL STUDENT. I CAN STUDY BY MYSELF. I TAKE TO IT KINDLY, LIKE A DUCK TO WATER. YOU SEE YOURSELF WHAT I DID WITH GRAMMAR. AND I’VE LEARNED MUCH OF OTHER THINGS-YOU WOULD NEVER DREAM HOW MUCH. AND I’M ONLY GETTING STARTED. WAIT TILL I GET- HE HESITATED AND ASSURED HIMSELF OF THE PRONUNCIATION BEFORE HE SAID MOMENTUM. I’M GETTING MY FIRST REAL FEEL OF THINGS NOW. I’M BEGINNING TO SIZE UP THE SITUATION-   PLEASE DON’T SAY ‘SIZE UP,’ SHE INTERRUPTED.   TO GET A LINE ON THINGS, HE HASTILY AMENDED.   THAT DOESN’T MEAN ANYTHING IN CORRECT ENGLISH, SHE OBJECTED.   HE FLOUNDERED FOR A FRESH START. WHAT I’M DRIVING AT IS THAT I’M BEGINNING TO GET THE LAY OF THE LAND   OUT OF PITY SHE FOREBORE, AND HE WENT ON.   KNOWLEDGE SEEMS TO ME LIKE A CHART-ROOM. WHENEVER I GO INTO THE LIBRARY, I AM IMPRESSED THAT WAY. THE PART PLAYED BY TEACHERS IS TO TEACH THE STUDENT THE CONTENTS OF THE CHART-ROOM IN A SYSTEMATIC WAY. THE TEACHERS ARE GUIDES TO THE CHART-ROOM, THAT’S ALL. IT’S NOT SOMETHING THAT THEY HAVE IN THEIR OWN HEADS. THEY DON’T MAKE IT UP, DON’T CREATE IT. IT’S ALL IN THE CHART-ROOM AND THEY KNOW THEIR WAY ABOUT IN IT, AND IT’S THEIR BUSINESS TO SHOW THE PLACE TO STRANGERS WHO MIGHT ELSE GET LOST. NOW I DON’T GET LOST EASILY. I HAVE THE BUMP OF LOCATION. I USUALLY KNOW WHERE I’M AT-WHAT’S WRONG NOW?   DON’T SAY ‘WHERE I’M AT.’   THAT’S RIGHT, HE SAID GRATEFULLY, WHERE I AM. BUT WHERE AM I AT-I MEAN, WHERE AM I? OH, YES, IN THE CHART-ROOM. WELL, SOME PEOPLE-   PERSONS, SHE CORRECTED.   SOME PERSONS NEED GUIDES, MOST PERSONS DO; BUT I THINK I CAN GET ALONG WITHOUT THEM. I’VE SPENT A LOT OF TIME IN THE CHART-ROOM NOW, AND I’M ON THE EDGE OF KNOWING MY WAY ABOUT, WHAT CHARTS I WANT TO REFER TO, WHAT COASTS I WANT TO EXPLORE. AND FROM THE WAY I LINE IT UP, I’LL EXPLORE A WHOLE LOT MORE QUICKLY BY MYSELF. THE SPEED OF A FLEET, YOU KNOW, IS THE SPEED OF THE SLOWEST SHIP, AND THE SPEED OF THE TEACHERS IS AFFECTED THE SAME WAY. THEY CAN’T GO ANY FASTER THAN THE RUCK OF THEIR SCHOLARS, AND I CAN SET A FASTER PACE FOR MYSELF THAN THEY SET FOR A WHOLE SCHOOLROOM.   ‘HE TRAVELS THE FASTEST WHO TRAVELS ALONE,’ SHE QUOTED AT HIM.   BUT I’D TRAVEL FASTER WITH YOU JUST THE SAME, WAS WHAT HE WANTED TO BLURT OUT, AS HE CAUGHT A VISION OF A WORLD WITHOUT END OF SUNLIT SPACES AND STARRY VOIDS THROUGH WHICH HE DRIFTED WITH HER, HIS ARM AROUND HER, HER PALE GOLD HAIR BLOWING ABOUT HIS FACE. IN THE SAME INSTANT HE WAS AWARE OF THE PITIFUL INADEQUACY OF SPEECH. GOD! IF HE COULD SO FRAME WORDS THAT SHE COULD SEE WHAT HE THEN SAW! AND HE FELT THE STIR IN HIM, LIKE A THROE OF YEARNING PAIN, OF THE DESIRE TO PAINT THESE VISIONS THAT FLASHED UNSUMMONED ON THE MIRROR OF HIS MIND. AH, THAT WAS IT! HE CAUGHT AT THE HEM OF THE SECRET. IT WAS THE VERY THING THAT THE GREAT WRITERS AND MASTER-POETS DID. THAT WAS WHY THEY WERE GIANTS. THEY KNEW HOW TO EXPRESS WHAT THEY THOUGHT, AND FELT, AND SAW. DOGS ASLEEP IN THE SUN OFTEN WHINED AND BARKED, BUT THEY WERE UNABLE TO TELL WHAT THEY SAW THAT MADE THEM WHINE AND BARK. HE HAD OFTEN WONDERED WHAT IT WAS. AND THAT WAS ALL HE WAS, A DOG ASLEEP IN THE SUN. HE SAW NOBLE AND BEAUTIFUL VISIONS, BUT HE COULD ONLY WHINE AND BARK AT RUTH. BUT HE WOULD CEASE SLEEPING IN THE SUN. HE WOULD STAND UP, WITH OPEN EYES, AND HE WOULD STRUGGLE AND TOIL AND LEARN UNTIL, WITH EYES UNBLINDED AND TONGUE UNTIED, HE COULD SHARE WITH HER HIS VISIONED WEALTH. OTHER MEN HAD DISCOVERED THE TRICK OF EXPRESSION, OF MAKING WORDS OBEDIENT SERVITORS, AND OF MAKING COMBINATIONS OF WORDS MEAN MORE THAN THE SUM OF THEIR SEPARATE MEANINGS. HE WAS STIRRED PROFOUNDLY BY THE PASSING GLIMPSE AT THE SECRET, AND HE WAS AGAIN CAUGHT UP IN THE VISION OF SUNLIT SPACES AND STARRY VOIDS-UNTIL IT CAME TO HIM THAT IT WAS VERY QUIET, AND HE SAW RUTH REGARDING HIM WITH AN AMUSED EXPRESSION AND A SMILE IN HER EYES.   I HAVE HAD A GREAT VISIONING, HE SAID, AND AT THE SOUND OF HIS WORDS IN HIS OWN EARS HIS HEART GAVE A LEAP. WHERE HAD THOSE WORDS COME FROM? THEY HAD ADEQUATELY EXPRESSED THE PAUSE HIS VISION HAD PUT IN THE CONVERSATION. IT WAS A MIRACLE. NEVER HAD HE SO LOFTILY FRAMED A LOFTY THOUGHT. BUT NEVER HAD HE ATTEMPTED TO FRAME LOFTY THOUGHTS IN WORDS. THAT WAS IT. THAT EXPLAINED IT. HE HAD NEVER TRIED. BUT SWINBURNE HAD, AND TENNYSON, AND KIPLING, AND ALL THE OTHER POETS. HIS MIND FLASHED ON TO HIS PEARL-DIVING. HE HAD NEVER DARED THE BIG THINGS, THE SPIRIT OF THE BEAUTY THAT WAS A FIRE IN HIM. THAT ARTICLE WOULD BE A DIFFERENT THING WHEN HE WAS DONE WITH IT. HE WAS APPALLED BY THE VASTNESS OF THE BEAUTY THAT RIGHTFULLY BELONGED IN IT, AND AGAIN HIS MIND FLASHED AND DARED, AND HE DEMANDED OF HIMSELF WHY HE COULD NOT CHANT THAT BEAUTY IN NOBLE VERSE AS THE GREAT POETS DID. AND THERE WAS ALL THE MYSTERIOUS DELIGHT AND SPIRITUAL WONDER OF HIS LOVE FOR RUTH. WHY COULD HE NOT CHANT THAT, TOO, AS THE POETS DID? THEY HAD SUNG OF LOVE. SO WOULD HE. BY GOD!-   AND IN HIS FRIGHTENED EARS HE HEARD HIS EXCLAMATION ECHOING. CARRIED AWAY, HE HAD BREATHED IT ALOUD. THE BLOOD SURGED INTO HIS FACE, WAVE UPON WAVE, MASTERING THE BRONZE OF IT TILL THE BLUSH OF SHAME FLAUNTED ITSELF FROM COLLAR-RIM TO THE ROOTS OF HIS HAIR.   I– I-BEG YOUR PARDON, HE STAMMERED. I WAS THINKING.   IT SOUNDED AS IF YOU WERE PRAYING, SHE SAID BRAVELY, BUT SHE FELT HERSELF INSIDE TO BE WITHERING AND SHRINKING. IT WAS THE FIRST TIME SHE HAD HEARD AN OATH FROM THE LIPS OF A MAN SHE KNEW, AND SHE WAS SHOCKED, NOT MERELY AS A MATTER OF PRINCIPLE AND TRAINING, BUT SHOCKED IN SPIRIT BY THIS ROUGH BLAST OF LIFE IN THE GARDEN OF HER SHELTERED MAIDENHOOD.   BUT SHE FORGAVE, AND WITH SURPRISE AT THE EASE OF HER FORGIVENESS. SOMEHOW IT WAS NOT SO DIFFICULT TO FORGIVE HIM ANYTHING. HE HAD NOT HAD A CHANCE TO BE AS OTHER MEN, AND HE WAS TRYING SO HARD, AND SUCCEEDING, TOO. IT NEVER ENTERED HER HEAD THAT THERE COULD BE ANY OTHER REASON FOR HER BEING KINDLY DISPOSED TOWARD HIM. SHE WAS TENDERLY DISPOSED TOWARD HIM, BUT SHE DID NOT KNOW IT. SHE HAD NO WAY OF KNOWING IT. THE PLACID POISE OF TWENTY-FOUR YEARS WITHOUT A SINGLE LOVE AFFAIR DID NOT FIT HER WITH A KEEN PERCEPTION OF HER OWN FEELINGS, AND SHE WHO HAD NEVER WARMED TO ACTUAL LOVE WAS UNAWARE THAT SHE WAS WARMING NOW."
    sourceText = u"SCROOGE WAS BETTER THAN HIS WORD. HE DID IT ALL, AND INFINITELY MORE; AND TO TINY TIM, WHO DID NOT DIE, HE WAS A SECOND FATHER. HE BECAME AS GOOD A FRIEND, AS GOOD A MASTER, AND AS GOOD A MAN, AS THE GOOD OLD CITY KNEW, OR ANY OTHER GOOD OLD CITY, TOWN, OR BOROUGH, IN THE GOOD OLD WORLD. SOME PEOPLE LAUGHED TO SEE THE ALTERATION IN HIM, BUT HE LET THEM LAUGH, AND LITTLE HEEDED THEM; FOR HE WAS WISE ENOUGH TO KNOW THAT NOTHING EVER HAPPENED ON THIS GLOBE, FOR GOOD, AT WHICH SOME PEOPLE DID NOT HAVE THEIR FILL OF LAUGHTER IN THE OUTSET; AND KNOWING THAT SUCH AS THESE WOULD BE BLIND ANYWAY, HE THOUGHT IT QUITE AS WELL THAT THEY SHOULD WRINKLE UP THEIR EYES IN GRINS, AS HAVE THE MALADY IN LESS ATTRACTIVE FORMS. HIS OWN HEART LAUGHED: AND THAT WAS QUITE ENOUGH FOR HIM. HE HAD NO FURTHER INTERCOURSE WITH SPIRITS, BUT LIVED UPON THE TOTAL ABSTINENCE PRINCIPLE, EVER AFTERWARDS; AND IT WAS ALWAYS SAID OF HIM, THAT HE KNEW HOW TO KEEP CHRISTMAS WELL, IF ANY MAN ALIVE POSSESSED THE KNOWLEDGE. MAY THAT BE TRULY SAID OF US, AND ALL OF US! AND SO, AS TINY TIM OBSERVED, GOD BLESS US, EVERY ONE!"
    cipher3 = u"JG UVQRRGF VQ FKPPGT VJCV GXGPKPI, CPF, OWEJ VQ TWVJ’U UCVKUHCEVKQP, OCFG C HCXQTCDNG KORTGUUKQP QP JGT HCVJGT. VJGA VCNMGF CDQWV VJG UGC CU C ECTGGT, C UWDLGEV YJKEJ OCTVKP JCF CV JKU HKPIGT-GPFU, CPF OT. OQTUG TGOCTMGF CHVGTYCTF VJCV JG UGGOGF C XGTA ENGCT-JGCFGF AQWPI OCP. KP JKU CXQKFCPEG QH UNCPI CPF JKU UGCTEJ CHVGT TKIJV YQTFU, OCTVKP YCU EQORGNNGF VQ VCNM UNQYNA, YJKEJ GPCDNGF JKO VQ HKPF VJG DGUV VJQWIJVU VJCV YGTG KP JKO. JG YCU OQTG CV GCUG VJCP VJCV HKTUV PKIJV CV FKPPGT, PGCTNA C AGCT DGHQTG, CPF JKU UJAPGUU CPF OQFGUVA GXGP EQOOGPFGF JKO VQ OTU. OQTUG, YJQ YCU RNGCUGF CV JKU OCPKHGUV KORTQXGOGPV. JG KU VJG HKTUV OCP VJCV GXGT FTGY RCUUKPI PQVKEG HTQO TWVJ,UJG VQNF JGT JWUDCPF. UJG JCU DGGP UQ UKPIWNCTNA DCEMYCTF YJGTG OGP CTG EQPEGTPGF VJCV K JCXG DGGP YQTTKGF ITGCVNA.  OT. OQTUG NQQMGF CV JKU YKHG EWTKQWUNA.   AQW OGCP VQ WUG VJKU AQWPI UCKNQT VQ YCMG JGT WR? JG SWGUVKQPGF.   K OGCP VJCV UJG KU PQV VQ FKG CP QNF OCKF KH K ECP JGNR KV, YCU VJG CPUYGT. KH VJKU AQWPI GFGP ECP CTQWUG JGT KPVGTGUV KP OCPMKPF KP IGPGTCN, KV YKNN DG C IQQF VJKPI.   C XGTA IQQF VJKPI, JG EQOOGPVGF. DWV UWRRQUG,-CPF YG OWUV UWRRQUG, UQOGVKOGU, OA FGCT,-UWRRQUG JG CTQWUGU JGT KPVGTGUV VQQ RCTVKEWNCTNA KP JKO? KORQUUKDNG, OTU. OQTUG NCWIJGF. UJG KU VJTGG AGCTU QNFGT VJCP JG, CPF, DGUKFGU, KV KU KORQUUKDNG. PQVJKPI YKNN GXGT EQOG QH KV. VTWUV VJCV VQ OG.   CPF UQ OCTVKP’U  YCU CTTCPIGF HQT JKO, YJKNG JG, NGF QP DA CTVJWT CPF PQTOCP, YCU OGFKVCVKPI CP GZVTCXCICPEG. VJGA YGTG IQKPI QWV HQT C TKFG KPVQ VJG JKNNU UWPFCA OQTPKPI QP VJGKT YJGGNU, YJKEJ FKF PQV KPVGTGUV OCTVKP WPVKN JG NGCTPGF VJCV TWVJ, VQQ, TQFG C YJGGN CPF YCU IQKPI CNQPI. JG FKF PQV TKFG, PQT QYP C YJGGN, DWV KH TWVJ TQFG, KV YCU WR VQ JKO VQ DGIKP, YCU JKU FGEKUKQP; CPF YJGP JG UCKF IQQF PKIJV, JG UVQRRGF KP CV C EAENGTA QP JKU YCA JQOG CPF URGPV HQTVA FQNNCTU HQT C YJGGN. KV YCU OQTG VJCP C OQPVJ’U JCTF-GCTPGF YCIGU, CPF KV TGFWEGF JKU UVQEM QH OQPGA COCBKPINA; DWV YJGP JG CFFGF VJG JWPFTGF FQNNCTU JG YCU VQ TGEGKXG HTQO VJG GZCOKPGT VQ VJG HQWT JWPFTGF CPF VYGPVA FQNNCTU VJCV YCU VJG NGCUV VJG AQWVJ’U EQORCPKQP EQWNF RCA JKO, JG HGNV VJCV JG JCF TGFWEGF VJG RGTRNGZKVA VJG WPYQPVGF COQWPV QH OQPGA JCF ECWUGF JKO. PQT FKF JG OKPF, KP VJG EQWTUG QH NGCTPKPI VQ TKFG VJG YJGGN JQOG, VJG HCEV VJCV JG TWKPGF JKU UWKV QH ENQVJGU. JG ECWIJV VJG VCKNQT DA VGNGRJQPG VJCV PKIJV HTQO OT. JKIIKPDQVJCO’U UVQTG CPF QTFGTGF CPQVJGT UWKV. VJGP JG ECTTKGF VJG YJGGN WR VJG PCTTQY UVCKTYCA VJCV ENWPI NKMG C HKTG-GUECRG VQ VJG TGCT YCNN QH VJG DWKNFKPI, CPF YJGP JG JCF OQXGF JKU DGF QWV HTQO VJG YCNN, HQWPF VJGTG YCU LWUV URCEG GPQWIJ KP VJG UOCNN TQQO HQT JKOUGNH CPF VJG YJGGN.   UWPFCA JG JCF KPVGPFGF VQ FGXQVG VQ UVWFAKPI HQT VJG JKIJ UEJQQN GZCOKPCVKQP, DWV VJG RGCTN-FKXKPI CTVKENG NWTGF JKO CYCA, CPF JG URGPV VJG FCA KP VJG YJKVG-JQV HGXGT QH TG-ETGCVKPI VJG DGCWVA CPF TQOCPEG VJCV DWTPGF KP JKO. VJG HCEV VJCV VJG GZCOKPGT QH VJCV OQTPKPI JCF HCKNGF VQ RWDNKUJ JKU VTGCUWTG-JWPVKPI CTVKENG FKF PQV FCUJ JKU URKTKVU. JG YCU CV VQQ ITGCV C JGKIJV HQT VJCV, CPF JCXKPI DGGP FGCH VQ C VYKEG-TGRGCVGF UWOOQPU, JG YGPV YKVJQWV VJG JGCXA UWPFCA FKPPGT YKVJ YJKEJ OT. JKIIKPDQVJCO KPXCTKCDNA ITCEGF JKU VCDNG. VQ OT. JKIIKPDQVJCO UWEJ C FKPPGT YCU CFXGTVKUGOGPV QH JKU YQTNFNA CEJKGXGOGPV CPF RTQURGTKVA, CPF JG JQPQTGF KV DA FGNKXGTKPI RNCVKVWFKPQWU UGTOQPGVVGU WRQP COGTKECP KPUVKVWVKQPU CPF VJG QRRQTVWPKVA UCKF KPUVKVWVKQPU ICXG VQ CPA JCTF-YQTMKPI OCP VQ TKUG-VJG TKUG, KP JKU ECUG, YJKEJ JG RQKPVGF QWV WPHCKNKPINA, DGKPI HTQO C ITQEGT’U ENGTM VQ VJG QYPGTUJKR QH JKIIKPDQVJCO’U ECUJ UVQTG.   OCTVKP GFGP NQQMGF YKVJ C UKIJ CV JKU WPHKPKUJGF RGCTN-FKXKPI QP OQPFCA OQTPKPI, CPF VQQM VJG ECT FQYP VQ QCMNCPF VQ VJG JKIJ UEJQQN. CPF YJGP, FCAU NCVGT, JG CRRNKGF HQT VJG TGUWNVU QH JKU GZCOKPCVKQPU, JG NGCTPGF VJCV JG JCF HCKNGF KP GXGTAVJKPI UCXG ITCOOCT.   AQWT ITCOOCT KU GZEGNNGPV, RTQHGUUQT JKNVQP KPHQTOGF JKO, UVCTKPI CV JKO VJTQWIJ JGCXA URGEVCENGU; DWV AQW MPQY PQVJKPI, RQUKVKXGNA PQVJKPI, KP VJG QVJGT DTCPEJGU, CPF AQWT WPKVGF UVCVGU JKUVQTA KU CDQOKPCDNG-VJGTG KU PQ QVJGT YQTF HQT KV, CDQOKPCDNG. K UJQWNF CFXKUG AQW-  RTQHGUUQT JKNVQP RCWUGF CPF INCTGF CV JKO, WPUAORCVJGVKE CPF WPKOCIKPCVKXG CU QPG QH JKU QYP VGUV-VWDGU. JG YCU RTQHGUUQT QH RJAUKEU KP VJG JKIJ UEJQQN, RQUUGUUQT QH C NCTIG HCOKNA, C OGCITG UCNCTA, CPF C UGNGEV HWPF QH RCTTQV-NGCTPGF MPQYNGFIG.   AGU, UKT, OCTVKP UCKF JWODNA, YKUJKPI UQOGJQY VJCV VJG OCP CV VJG FGUM KP VJG NKDTCTA YCU KP RTQHGUUQT JKNVQP’U RNCEG LWUV VJGP.   CPF K UJQWNF CFXKUG AQW VQ IQ DCEM VQ VJG ITCOOCT UEJQQN HQT CV NGCUV VYQ AGCTU. IQQF FCA.   OCTVKP YCU PQV FGGRNA CHHGEVGF DA JKU HCKNWTG, VJQWIJ JG YCU UWTRTKUGF CV TWVJ’U UJQEMGF GZRTGUUKQP YJGP JG VQNF JGT RTQHGUUQT JKNVQP’U CFXKEG. JGT FKUCRRQKPVOGPV YCU UQ GXKFGPV VJCV JG YCU UQTTA JG JCF HCKNGF, DWV EJKGHNA UQ HQT JGT UCMG.   AQW UGG K YCU TKIJV, UJG UCKF. AQW MPQY HCT OQTG VJCP CPA QH VJG UVWFGPVU GPVGTKPI JKIJ UEJQQN, CPF AGV AQW ECP’V RCUU VJG GZCOKPCVKQPU. KV KU DGECWUG YJCV GFWECVKQP AQW JCXG KU HTCIOGPVCTA, UMGVEJA. AQW PGGF VJG FKUEKRNKPG QH UVWFA, UWEJ CU QPNA UMKNNGF VGCEJGTU ECP IKXG AQW. AQW OWUV DG VJQTQWIJNA ITQWPFGF. RTQHGUUQT JKNVQP KU TKIJV, CPF KH K YGTG AQW, K’F IQ VQ PKIJV UEJQQN. C AGCT CPF C JCNH QH KV OKIJV GPCDNG AQW VQ ECVEJ WR VJCV CFFKVKQPCN UKZ OQPVJU. DGUKFGU, VJCV YQWNF NGCXG AQW AQWT FCAU KP YJKEJ VQ YTKVG, QT, KH AQW EQWNF PQV OCMG AQWT NKXKPI DA AQWT RGP, AQW YQWNF JCXG AQWT FCAU KP YJKEJ VQ YQTM KP UQOG RQUKVKQP.   DWV KH OA FCAU CTG VCMGP WR YKVJ YQTM CPF OA PKIJVU YKVJ UEJQQN, YJGP CO K IQKPI VQ UGG AQW?-YCU OCTVKP’U HKTUV VJQWIJV, VJQWIJ JG TGHTCKPGF HTQO WVVGTKPI KV. KPUVGCF, JG UCKF:-   KV UGGOU UQ DCDAKUJ HQT OG VQ DG IQKPI VQ PKIJV UEJQQN. DWV K YQWNFP’V OKPF VJCV KH K VJQWIJV KV YQWNF RCA. DWV K FQP’V VJKPM KV YKNN RCA. K ECP FQ VJG YQTM SWKEMGT VJCP VJGA ECP VGCEJ OG. KV YQWNF DG C NQUU QH VKOG- JG VJQWIJV QH JGT CPF JKU FGUKTG VQ JCXG JGT-CPF K ECP’V CHHQTF VJG VKOG. K JCXGP’V VJG VKOG VQ URCTG, KP HCEV.   VJGTG KU UQ OWEJ VJCV KU PGEGUUCTA. UJG NQQMGF CV JKO IGPVNA, CPF JG YCU C DTWVG VQ QRRQUG JGT. RJAUKEU CPF EJGOKUVTA-AQW ECP’V FQ VJGO YKVJQWV NCDQTCVQTA UVWFA; CPF AQW’NN HKPF CNIGDTC CPF IGQOGVTA CNOQUV JQRGNGUU YKVJ KPUVTWEVKQP. AQW PGGF VJG UMKNNGF VGCEJGTU, VJG URGEKCNKUVU KP VJG CTV QH KORCTVKPI MPQYNGFIG.   JG YCU UKNGPV HQT C OKPWVG, ECUVKPI CDQWV HQT VJG NGCUV XCKPINQTKQWU YCA KP YJKEJ VQ GZRTGUU JKOUGNH.   RNGCUG FQP’V VJKPM K’O DTCIIKPI, JG DGICP. K FQP’V KPVGPF KV VJCV YCA CV CNN. DWV K JCXG C HGGNKPI VJCV K CO YJCV K OCA ECNN C PCVWTCN UVWFGPV. K ECP UVWFA DA OAUGNH. K VCMG VQ KV MKPFNA, NKMG C FWEM VQ YCVGT. AQW UGG AQWTUGNH YJCV K FKF YKVJ ITCOOCT. CPF K’XG NGCTPGF OWEJ QH QVJGT VJKPIU-AQW YQWNF PGXGT FTGCO JQY OWEJ. CPF K’O QPNA IGVVKPI UVCTVGF. YCKV VKNN K IGV- JG JGUKVCVGF CPF CUUWTGF JKOUGNH QH VJG RTQPWPEKCVKQP DGHQTG JG UCKF OQOGPVWO. K’O IGVVKPI OA HKTUV TGCN HGGN QH VJKPIU PQY. K’O DGIKPPKPI VQ UKBG WR VJG UKVWCVKQP-   RNGCUG FQP’V UCA ‘UKBG WR,’ UJG KPVGTTWRVGF.   VQ IGV C NKPG QP VJKPIU, JG JCUVKNA COGPFGF.   VJCV FQGUP’V OGCP CPAVJKPI KP EQTTGEV GPINKUJ, UJG QDLGEVGF.   JG HNQWPFGTGF HQT C HTGUJ UVCTV. YJCV K’O FTKXKPI CV KU VJCV K’O DGIKPPKPI VQ IGV VJG NCA QH VJG NCPF   QWV QH RKVA UJG HQTGDQTG, CPF JG YGPV QP.   MPQYNGFIG UGGOU VQ OG NKMG C EJCTV-TQQO. YJGPGXGT K IQ KPVQ VJG NKDTCTA, K CO KORTGUUGF VJCV YCA. VJG RCTV RNCAGF DA VGCEJGTU KU VQ VGCEJ VJG UVWFGPV VJG EQPVGPVU QH VJG EJCTV-TQQO KP C UAUVGOCVKE YCA. VJG VGCEJGTU CTG IWKFGU VQ VJG EJCTV-TQQO, VJCV’U CNN. KV’U PQV UQOGVJKPI VJCV VJGA JCXG KP VJGKT QYP JGCFU. VJGA FQP’V OCMG KV WR, FQP’V ETGCVG KV. KV’U CNN KP VJG EJCTV-TQQO CPF VJGA MPQY VJGKT YCA CDQWV KP KV, CPF KV’U VJGKT DWUKPGUU VQ UJQY VJG RNCEG VQ UVTCPIGTU YJQ OKIJV GNUG IGV NQUV. PQY K FQP’V IGV NQUV GCUKNA. K JCXG VJG DWOR QH NQECVKQP. K WUWCNNA MPQY YJGTG K’O CV-YJCV’U YTQPI PQY?   FQP’V UCA ‘YJGTG K’O CV.’   VJCV’U TKIJV, JG UCKF ITCVGHWNNA, YJGTG K CO. DWV YJGTG CO K CV-K OGCP, YJGTG CO K? QJ, AGU, KP VJG EJCTV-TQQO. YGNN, UQOG RGQRNG-   RGTUQPU, UJG EQTTGEVGF.   UQOG RGTUQPU PGGF IWKFGU, OQUV RGTUQPU FQ; DWV K VJKPM K ECP IGV CNQPI YKVJQWV VJGO. K’XG URGPV C NQV QH VKOG KP VJG EJCTV-TQQO PQY, CPF K’O QP VJG GFIG QH MPQYKPI OA YCA CDQWV, YJCV EJCTVU K YCPV VQ TGHGT VQ, YJCV EQCUVU K YCPV VQ GZRNQTG. CPF HTQO VJG YCA K NKPG KV WR, K’NN GZRNQTG C YJQNG NQV OQTG SWKEMNA DA OAUGNH. VJG URGGF QH C HNGGV, AQW MPQY, KU VJG URGGF QH VJG UNQYGUV UJKR, CPF VJG URGGF QH VJG VGCEJGTU KU CHHGEVGF VJG UCOG YCA. VJGA ECP’V IQ CPA HCUVGT VJCP VJG TWEM QH VJGKT UEJQNCTU, CPF K ECP UGV C HCUVGT RCEG HQT OAUGNH VJCP VJGA UGV HQT C YJQNG UEJQQNTQQO.   ‘JG VTCXGNU VJG HCUVGUV YJQ VTCXGNU CNQPG,’ UJG SWQVGF CV JKO.   DWV K’F VTCXGN HCUVGT YKVJ AQW LWUV VJG UCOG, YCU YJCV JG YCPVGF VQ DNWTV QWV, CU JG ECWIJV C XKUKQP QH C YQTNF YKVJQWV GPF QH UWPNKV URCEGU CPF UVCTTA XQKFU VJTQWIJ YJKEJ JG FTKHVGF YKVJ JGT, JKU CTO CTQWPF JGT, JGT RCNG IQNF JCKT DNQYKPI CDQWV JKU HCEG. KP VJG UCOG KPUVCPV JG YCU CYCTG QH VJG RKVKHWN KPCFGSWCEA QH URGGEJ. IQF! KH JG EQWNF UQ HTCOG YQTFU VJCV UJG EQWNF UGG YJCV JG VJGP UCY! CPF JG HGNV VJG UVKT KP JKO, NKMG C VJTQG QH AGCTPKPI RCKP, QH VJG FGUKTG VQ RCKPV VJGUG XKUKQPU VJCV HNCUJGF WPUWOOQPGF QP VJG OKTTQT QH JKU OKPF. CJ, VJCV YCU KV! JG ECWIJV CV VJG JGO QH VJG UGETGV. KV YCU VJG XGTA VJKPI VJCV VJG ITGCV YTKVGTU CPF OCUVGT-RQGVU FKF. VJCV YCU YJA VJGA YGTG IKCPVU. VJGA MPGY JQY VQ GZRTGUU YJCV VJGA VJQWIJV, CPF HGNV, CPF UCY. FQIU CUNGGR KP VJG UWP QHVGP YJKPGF CPF DCTMGF, DWV VJGA YGTG WPCDNG VQ VGNN YJCV VJGA UCY VJCV OCFG VJGO YJKPG CPF DCTM. JG JCF QHVGP YQPFGTGF YJCV KV YCU. CPF VJCV YCU CNN JG YCU, C FQI CUNGGR KP VJG UWP. JG UCY PQDNG CPF DGCWVKHWN XKUKQPU, DWV JG EQWNF QPNA YJKPG CPF DCTM CV TWVJ. DWV JG YQWNF EGCUG UNGGRKPI KP VJG UWP. JG YQWNF UVCPF WR, YKVJ QRGP GAGU, CPF JG YQWNF UVTWIING CPF VQKN CPF NGCTP WPVKN, YKVJ GAGU WPDNKPFGF CPF VQPIWG WPVKGF, JG EQWNF UJCTG YKVJ JGT JKU XKUKQPGF YGCNVJ. QVJGT OGP JCF FKUEQXGTGF VJG VTKEM QH GZRTGUUKQP, QH OCMKPI YQTFU QDGFKGPV UGTXKVQTU, CPF QH OCMKPI EQODKPCVKQPU QH YQTFU OGCP OQTG VJCP VJG UWO QH VJGKT UGRCTCVG OGCPKPIU. JG YCU UVKTTGF RTQHQWPFNA DA VJG RCUUKPI INKORUG CV VJG UGETGV, CPF JG YCU CICKP ECWIJV WR KP VJG XKUKQP QH UWPNKV URCEGU CPF UVCTTA XQKFU-WPVKN KV ECOG VQ JKO VJCV KV YCU XGTA SWKGV, CPF JG UCY TWVJ TGICTFKPI JKO YKVJ CP COWUGF GZRTGUUKQP CPF C UOKNG KP JGT GAGU.   K JCXG JCF C ITGCV XKUKQPKPI, JG UCKF, CPF CV VJG UQWPF QH JKU YQTFU KP JKU QYP GCTU JKU JGCTV ICXG C NGCR. YJGTG JCF VJQUG YQTFU EQOG HTQO? VJGA JCF CFGSWCVGNA GZRTGUUGF VJG RCWUG JKU XKUKQP JCF RWV KP VJG EQPXGTUCVKQP. KV YCU C OKTCENG. PGXGT JCF JG UQ NQHVKNA HTCOGF C NQHVA VJQWIJV. DWV PGXGT JCF JG CVVGORVGF VQ HTCOG NQHVA VJQWIJVU KP YQTFU. VJCV YCU KV. VJCV GZRNCKPGF KV. JG JCF PGXGT VTKGF. DWV UYKPDWTPG JCF, CPF VGPPAUQP, CPF MKRNKPI, CPF CNN VJG QVJGT RQGVU. JKU OKPF HNCUJGF QP VQ JKU RGCTN-FKXKPI. JG JCF PGXGT FCTGF VJG DKI VJKPIU, VJG URKTKV QH VJG DGCWVA VJCV YCU C HKTG KP JKO. VJCV CTVKENG YQWNF DG C FKHHGTGPV VJKPI YJGP JG YCU FQPG YKVJ KV. JG YCU CRRCNNGF DA VJG XCUVPGUU QH VJG DGCWVA VJCV TKIJVHWNNA DGNQPIGF KP KV, CPF CICKP JKU OKPF HNCUJGF CPF FCTGF, CPF JG FGOCPFGF QH JKOUGNH YJA JG EQWNF PQV EJCPV VJCV DGCWVA KP PQDNG XGTUG CU VJG ITGCV RQGVU FKF. CPF VJGTG YCU CNN VJG OAUVGTKQWU FGNKIJV CPF URKTKVWCN YQPFGT QH JKU NQXG HQT TWVJ. YJA EQWNF JG PQV EJCPV VJCV, VQQ, CU VJG RQGVU FKF? VJGA JCF UWPI QH NQXG. UQ YQWNF JG. DA IQF!-   CPF KP JKU HTKIJVGPGF GCTU JG JGCTF JKU GZENCOCVKQP GEJQKPI. ECTTKGF CYCA, JG JCF DTGCVJGF KV CNQWF. VJG DNQQF UWTIGF KPVQ JKU HCEG, YCXG WRQP YCXG, OCUVGTKPI VJG DTQPBG QH KV VKNN VJG DNWUJ QH UJCOG HNCWPVGF KVUGNH HTQO EQNNCT-TKO VQ VJG TQQVU QH JKU JCKT.   K– K-DGI AQWT RCTFQP, JG UVCOOGTGF. K YCU VJKPMKPI.   KV UQWPFGF CU KH AQW YGTG RTCAKPI, UJG UCKF DTCXGNA, DWV UJG HGNV JGTUGNH KPUKFG VQ DG YKVJGTKPI CPF UJTKPMKPI. KV YCU VJG HKTUV VKOG UJG JCF JGCTF CP QCVJ HTQO VJG NKRU QH C OCP UJG MPGY, CPF UJG YCU UJQEMGF, PQV OGTGNA CU C OCVVGT QH RTKPEKRNG CPF VTCKPKPI, DWV UJQEMGF KP URKTKV DA VJKU TQWIJ DNCUV QH NKHG KP VJG ICTFGP QH JGT UJGNVGTGF OCKFGPJQQF.   DWV UJG HQTICXG, CPF YKVJ UWTRTKUG CV VJG GCUG QH JGT HQTIKXGPGUU. UQOGJQY KV YCU PQV UQ FKHHKEWNV VQ HQTIKXG JKO CPAVJKPI. JG JCF PQV JCF C EJCPEG VQ DG CU QVJGT OGP, CPF JG YCU VTAKPI UQ JCTF, CPF UWEEGGFKPI, VQQ. KV PGXGT GPVGTGF JGT JGCF VJCV VJGTG EQWNF DG CPA QVJGT TGCUQP HQT JGT DGKPI MKPFNA FKURQUGF VQYCTF JKO. UJG YCU VGPFGTNA FKURQUGF VQYCTF JKO, DWV UJG FKF PQV MPQY KV. UJG JCF PQ YCA QH MPQYKPI KV. VJG RNCEKF RQKUG QH VYGPVA-HQWT AGCTU YKVJQWV C UKPING NQXG CHHCKT FKF PQV HKV JGT YKVJ C MGGP RGTEGRVKQP QH JGT QYP HGGNKPIU, CPF UJG YJQ JCF PGXGT YCTOGF VQ CEVWCN NQXG YCU WPCYCTG VJCV UJG YCU YCTOKPI PQY."
    cipher1 = u"UETQQIG YCU DGVVGT VJCP JKU YQTF. JG FKF KV CNN, CPF KPHKPKVGNA OQTG; CPF VQ VKPA VKO, YJQ FKF PQV FKG, JG YCU C UGEQPF HCVJGT. JG DGECOG CU IQQF C HTKGPF, CU IQQF C OCUVGT, CPF CU IQQF C OCP, CU VJG IQQF QNF EKVA MPGY, QT CPA QVJGT IQQF QNF EKVA, VQYP, QT DQTQWIJ, KP VJG IQQF QNF YQTNF. UQOG RGQRNG NCWIJGF VQ UGG VJG CNVGTCVKQP KP JKO, DWV JG NGV VJGO NCWIJ, CPF NKVVNG JGGFGF VJGO; HQT JG YCU YKUG GPQWIJ VQ MPQY VJCV PQVJKPI GXGT JCRRGPGF QP VJKU INQDG, HQT IQQF, CV YJKEJ UQOG RGQRNG FKF PQV JCXG VJGKT HKNN QH NCWIJVGT KP VJG QWVUGV; CPF MPQYKPI VJCV UWEJ CU VJGUG YQWNF DG DNKPF CPAYCA, JG VJQWIJV KV SWKVG CU YGNN VJCV VJGA UJQWNF YTKPMNG WR VJGKT GAGU KP ITKPU, CU JCXG VJG OCNCFA KP NGUU CVVTCEVKXG HQTOU. JKU QYP JGCTV NCWIJGF: CPF VJCV YCU SWKVG GPQWIJ HQT JKO. JG JCF PQ HWTVJGT KPVGTEQWTUG YKVJ URKTKVU, DWV NKXGF WRQP VJG VQVCN CDUVKPGPEG RTKPEKRNG, GXGT CHVGTYCTFU; CPF KV YCU CNYCAU UCKF QH JKO, VJCV JG MPGY JQY VQ MGGR EJTKUVOCU YGNN, KH CPA OCP CNKXG RQUUGUUGF VJG MPQYNGFIG. OCA VJCV DG VTWNA UCKF QH WU, CPF CNN QH WU! CPF UQ, CU VKPA VKO QDUGTXGF, IQF DNGUU WU, GXGTA QPG!"
    cipher = u"UTPDHUW YRQ QXHLGI RWTB ZKJ UDKR. ZG UGS BH SNC, YCW WFHZLXMSDA DMGX; OFF KM IBBQ VZK, LAC VKU LDM RAG, YC LTG S UVADGR XCKFTK. VW DVAPFS SU XMDW O XTZCCW, OK IFMS T ASUKCG, TBV CJ EDHR S ORL, PL HZG XMDW CDF TGIR YFGN, MG TBQ QKFTK UGQU MAW QAVP, RDPB, GT SMGHIYJ, ZL IAS YQFB DER OQIJS. LCEG GCDIZW NRSVASV VF QTX HZG RJIXFSVZMC BB ZKD, ZJM VW NVR IASE NRSVA, OFF CGIMZW JVCSXR LJVK; UHF ZG NYH PWKG VLDNUZ VF ICHK LJRR CHHZKEE TOSJ JRNEXBWF FL IAWK ICMQX, TGT XMDW, OL YYGRA GGOV NTHDDG UGS GCL JRTT MVWKI DXEZ GH CYJZVLGI GC MVW QLRHXH; SPU ICHKAPX RWTH KWTF PL HZGJC LHIDF SC QEWFF RLNPOQ, JV RWHIYJK GI JIAVV YH PSDN KFPM HZGP QWHIDF NPXGYDG LN IASAT VWTL WF IIGCL, OK JRTT MVW ORJPWM AP CCHL OLVIYRMWNG WMGFG. ZKJ MLG VWCIR ATIYJVB: PGR LJRR LTG IWZRT XBGWXF UHF ZKD. FT AOV PF DJKHZGI GCMSJEFSGLS OKKF HIWJKKQ, QNH DKMCS NDGP KFT MCLCC YQLHAPVLRX DJKEAXIZW, GMCG TTLGIUPKRK; CEB XM KSU RJLTMK URGS HT ZKD, RWTH ZG BLTP VGY KM ZXSH EYPXLHECJ UTEZ, AH RLN FOF CCGKX DGUJCHLSV VYC ZGCONVBVX. ASA KFPM PW VISAR GSKU MU NG, SPU YAE CX WJ! YCW GG, CJ RXGM LKD MQLSJXVB, VHR TNVQH NG, WXVPN HBW!"
  #  keyLen = keyCount(cipher)
    cipherLetters = u""
    for i in range(cipher.__len__()):
         if pattern.match(cipher[i]):
             cipherLetters += cipher[i]
    # !!!!!!!!!!!!!! epta
    keyLen = 1

    # keyLen not always good
    frequencyAnalysis(cipher3, keyLen)
    print sourceTextForCipher3
    #text = frequencyAnalysis(cipher1, keyLen)
    #
    # decipher = []
    #
    # for i in range(keyLen):
    #     dict = {}
    #     for j in range(26): # alphabet count
    #         dict[usualEnglishLettersRate[j]] = u""
    #     decipher.append(dict)
    # # print(decipher)
    # keyLenOffsetArray = []
    # normalText = u""
    # words = re.split("[^A-Z]+", text)
    # k = 0
    # normalWords = []
    # offset = 0 # index of the first letter of the current word| (offset + 1) % keyLen - number of alphabet
    # while k < words.__len__():
    #     keyLenOffsetArray.append(offset)
    #     normalWords.append([])
    #     word = words[k]
    #     k += 1
    #     if word.__len__() > 7:
    #         offset += word.__len__()
    #         continue
    #     currentIndex = []
    #     endIndex = []
    #     for j in range(word.__len__()):
    #         index = usualEnglishLettersRate.index(word[j])
    #         if index < frequentAnalysisError:
    #             currentIndex.append(0)
    #         else:
    #             currentIndex.append(index - frequentAnalysisError)
    #
    #         if index > usualEnglishLettersRate.__len__() - frequentAnalysisError - 1:
    #             endIndex.append(word.__len__() - frequentAnalysisError - 1)
    #         else:
    #             endIndex.append(index + frequentAnalysisError)
    #     firstIndex = currentIndex[:]
    #     permanentIndex = []
    #     for i in range(len(currentIndex)):
    #         permanentIndex.append(-1)
    #     for i in range(word.__len__()):
    #         decipheredLetter = decipher[(offset + i + 1) % keyLen][word[i]]
    #         if decipheredLetter != u'':
    #             print(decipheredLetter)
    #             permanentIndex[i] = usualEnglishLettersRate.index(decipheredLetter)
    #     for i in range(word.__len__()):
    #         if permanentIndex[i] != -1:
    #             currentIndex[i] = permanentIndex[i]
    #
    #     l = -1
    #     for i in range(word.__len__()):
    #         if permanentIndex[i] == -1:
    #             l = i
    #             break
    #     flag = True
    #     while compareComplexIndexes(currentIndex, endIndex):
    #
    #         if l == -1:
    #             # decipher word
    #             print("todo")
    #             break
    #
    #         lettetList = []
    #         for i in range(len(word)):
    #             lettetList.append(usualEnglishLettersRate[currentIndex[i]])
    #         # print("".join(lettetList))
    #
    #         start = currentIndex[l]
    #         for i in range(start, endIndex[l] + 1):
    #             lettetList[l] = usualEnglishLettersRate[i]
    #             # print("".join(wordList))
    #             if d.check("".join(lettetList)):
    #                 # for l in range(word.__len__()):
    #                 if flag:
    #                     # normalText += "".join(lettetList) + " "
    #                     flag = False
    #                 normalWords[k - 1].append(u"".join(lettetList))
    #                 print(lettetList)
    #
    #         currentIndex = increaseComplexIndex(currentIndex, endIndex, permanentIndex)
    #         # print(k)
    #         # print("".join(wordList))
    #         # print currentIndex
    #     offset += word.__len__()
    #     print(word)
    #     print(k)
    #     print(permanentIndex)
    # # (endIndex)
    # # print(firstIndex)
    #
    # # for i in range(normalWords.__len__()):
    #
    # # canBeDeciphered = True
    # # while canBeDeciphered:
    # #     for i in range(normalWords.__len__()):
    # #         if normalWords[i].__len__() == 1: # only one word can be here
    # #             for j in range(normalWords[i][0].__len__()):
    # #                 decipher[(keyLenOffsetArray[i] + 1) % keyLen][normalWords[i][0][j]] =
    #
    # print normalWords
    # for i in range(normalWords.__len__()):
    #     print(normalWords[i])
    #     print(i)


